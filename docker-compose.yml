version: '3.8'

services:

  web:
    build: ./web
    ports:
      - "8000:8000"
    container_name: web
    networks:
      - app-network
    depends_on:
      # - kafka1
      # - kafka2
      # - kafka3
      - kafka
      - zookeeper

  # db:
  #   image: postgres:13
  #   container_name: db
  #   restart: always
  #   environment:
  #     POSTGRES_DB: prod
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: root
  #   ports:
  #     - "8002:5432"
  #   networks:
  #     - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - app-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  # ----

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   restart: always
  #   environment:
  #     ZOOKEEPER_SERVER_ID: 1
  #     ZOOKEEPER_TICK_TIME: 2000
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_INIT_LIMIT: 5
  #     ZOOKEEPER_SYNC_LIMIT: 2
  #     ZOOKEEPER_SERVERS: zookeeper:2888:3888
  #   healthcheck:
  #     test: echo stat | nc localhost 2181
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #   ports:
  #     - "2181:2181"
  #     - "2888:2888"
  #     - "3888:3888"
  #   networks:
  #     - network

  # kafka1:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka1
  #   restart: always
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9091:9091"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LISTNERS: LISTNER_INT://kafka1:29091,LISTENER_EXT://kafka1:9091
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka1:29091,LISTENER_EXT://kafka1:9091
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
  #     ZOOKEEPER: zookeeper:2181
  #   networks:
  #     - network

  # kafka2:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka2
  #   restart: always
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_LISTNERS: LISTNER_INT://kafka2:29092,LISTENER_EXT://kafka2:9092
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka2:29091,LISTENER_EXT://kafka2:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
  #     ZOOKEEPER: zookeeper:2181
  #   networks:
  #     - network

  # kafka3:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka3
  #   restart: always
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9093:9093"
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_LISTNERS: LISTNER_INT://kafka3:29093,LISTENER_EXT://kafka3:9093
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka3:29093,LISTENER_EXT://kafka3:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
  #     ZOOKEEPER: zookeeper:2181
  #   networks:
  #     - network

  # my-app:
  #   container_name: my-app
  #   build: 
  #     context: ./
  #     dockerfile: ./Dockerfile.my-app
  #   restart: always
  #   depends_on:
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #     - postgres
  #     - zookeeper
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - network
  
  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   restart: unless-stopped
  #   environment:
  #     - REDIS_PASSWORD=password
  #     - REDIS_PORT=6379
  #     - REDIS_DATABASES=16
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - network

networks:
  app-network:
    driver: bridge

